--source include/have_tianmu.inc

--disable_warnings
DROP DATABASE IF EXISTS func_math_test;
--enable_warnings

CREATE DATABASE func_math_test;

USE func_math_test;

create table t1
(f1 varchar(32) not null,
f2 smallint(5) unsigned not null,
f3 int(10) unsigned not null default '0')
engine=tianmu default charset=utf8;
insert into t1 values ('zombie',0,0),('gold',1,10000),('silver',2,10000);
create table t2
(f1 int(10) unsigned not null,
f2 int(10) unsigned not null,
f3 smallint(5) unsigned not null)
engine=tianmu default charset=utf8;
insert into t2 values (16777216,16787215,1),(33554432,33564431,2);
select format(t2.f2-t2.f1+1,0) from t1,t2
where t1.f2 = t2.f3 order by t1.f1;
drop table t1, t2;
create table t1(a int unsigned) engine=tianmu default charset=utf8;
insert into t1 values (11);
select cast(-2 as unsigned), 18446744073709551614, -2 from t1;
select abs(cast(-2 as unsigned)), abs(18446744073709551614), abs(-2) from t1;
# for mysql, ceiling(18446744073709551614) is ok, but in tianmu, decimal overflow, need cast(...)
--error 1105
select ceiling(18446744073709551614) from t1;
select ceiling(cast(-2 as unsigned)), ceiling(-2) from t1;
--error 1105
select floor(18446744073709551614) from t1;
select floor(cast(-2 as unsigned)), floor(-2) from t1;
select format(cast(-2 as unsigned), 2), format(18446744073709551614, 2), format(-2, 2) from t1;
select sqrt(cast(-2 as unsigned)), sqrt(18446744073709551614), sqrt(-2) from t1;
select round(cast(-2 as unsigned), 1), round(18446744073709551614, 1), round(-2, 1) from t1;
select round(4, cast(-2 as unsigned)), round(4, 18446744073709551614), round(4, -2) from t1;
select truncate(cast(-2 as unsigned), 1), truncate(18446744073709551614, 1), truncate(-2, 1) from t1;
select truncate(4, cast(-2 as unsigned)), truncate(4, 18446744073709551614), truncate(4, -2) from t1;
select mod(cast(-2 as unsigned), 3), mod(18446744073709551614, 3), mod(-2, 3) from t1;
select mod(5, cast(-2 as unsigned)), mod(5, 18446744073709551614), mod(5, -2) from t1;
select pow(cast(-2 as unsigned), 5), pow(18446744073709551614, 5), pow(-2, 5) from t1;
--error 1690
SELECT 1e308 + 1e308 from t1;
--error 1690
SELECT -1e308 - 1e308 from t1;
--error 1690
SELECT 1e300 * 1e300 from t1;
--error 1690
SELECT 1e300 / 1e-300 from t1;
--error 1690
SELECT EXP(750) from t1;
--error 1690
SELECT POW(10, 309) from t1;
#
# Bug#57477 SIGFPE when dividing a huge number a negative number
#
--error 1690
SELECT -9999999999999999991 DIV -1 from t1;
--error 1690
SELECT -9223372036854775808 DIV -1 from t1;
SELECT -9223372036854775808 MOD -1 from t1;
SELECT -9223372036854775808999 MOD -1 from t1;
--error 1690
select 123456789012345678901234567890.123456789012345678901234567890 div 1 as x from t1;
--error 1690
select "123456789012345678901234567890.123456789012345678901234567890" div 1 as x from t1;
SHOW WARNINGS;
#
# Bug #8433: Overflow must be an error
#
--error 1690
SELECT 1e308 + 1e308 from t1;
--error 1690
SELECT -1e308 - 1e308 from t1;
--error 1690
SELECT 1e300 * 1e300 from t1;
--error 1690
SELECT 1e300 / 1e-300 from t1;
--error 1690
SELECT EXP(750) from t1;
--error 1690
SELECT POW(10, 309) from t1;
--error 1690
SELECT COT(0) from t1;
--error 1690
SELECT DEGREES(1e307) from t1;
--error 1690
SELECT 9223372036854775808 + 9223372036854775808 from t1;
--error 1690
SELECT 18446744073709551615 + 1 from t1;
--error 1690
SELECT 1 + 18446744073709551615 from t1;
--error 1690
SELECT -2 + CAST(1 AS UNSIGNED) from t1;
--error 1690
SELECT CAST(1 AS UNSIGNED) + -2 from t1;
--error 1690
SELECT -9223372036854775808 + -9223372036854775808 from t1;
--error 1690
SELECT 9223372036854775807 + 9223372036854775807 from t1;
--error 1690
SELECT CAST(0 AS UNSIGNED) - 9223372036854775809 from t1;
--error 1690
SELECT 9223372036854775808 - 9223372036854775809 from t1;
--error 1690
SELECT CAST(1 AS UNSIGNED) - 2 from t1;
--error 1690
SELECT 18446744073709551615 - (-1) from t1;
--error 1690
SELECT -1 - 9223372036854775808 from t1;
--error 1690
SELECT -1 - CAST(1 AS UNSIGNED) from t1;
--error 1690
SELECT -9223372036854775808 - 1 from t1;
--error 1690
SELECT 9223372036854775807 - -9223372036854775808 from t1;
set SQL_MODE='NO_UNSIGNED_SUBTRACTION';
--error 1690
SELECT 18446744073709551615 - 1 from t1;
--error 1690
SELECT 18446744073709551615 - CAST(1 AS UNSIGNED) from t1;
--error 1690
SELECT 18446744073709551614 - (-1) from t1;
--error 1690
SELECT 9223372036854775807 - -1 from t1;
set SQL_MODE=default;
--error 1690
SELECT 4294967296 * 4294967296 from t1;
--error 1690
SELECT 9223372036854775808 * 2 from t1;
--error 1690
SELECT 9223372036854775808 * 2 from t1;
--error 1690
SELECT 7158278827 * 3221225472 from t1;
--error 1690
SELECT 9223372036854775807 * (-2) from t1;
--error 1690
SELECT CAST(1 as UNSIGNED) * (-1) from t1;
--error 1690
SELECT 9223372036854775807 * 2 from t1;
--error 1690
SELECT ABS(-9223372036854775808) from t1;
--error 1690
SELECT -9223372036854775808 DIV -1 from t1;
--error 1690
SELECT 18446744073709551615 DIV -1 from t1;
SET @a:=999999999999999999999999999999999999999999999999999999999999999999999999999999999;
--error 1690
SELECT @a + @a from t1;
--error 1690
SELECT @a * @a from t1;
--error 1690
SELECT -@a - @a from t1;
--error 1690
SELECT @a / 0.5 from t1;
# next is design by tianmu team
drop table if exists t1, t2;
create table t1(a tinyint zerofill, b int) engine=tianmu;
insert into t1 values (11, 22); 
--error 1690
select a-b from t1;
--error 1690
select cast((a-b) as unsigned) from t1;
create table t2(a tinyint unsigned, b int) engine=tianmu;
insert into t2 values (1, 22);
--error 1690
select a-b from t1;
--error 1690
select cast((a-b) as unsigned) from t2;
drop table t1, t2;

DROP DATABASE func_math_test;
