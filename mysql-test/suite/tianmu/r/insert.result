#
#Insert values for different types of fields
#
DROP DATABASE IF EXISTS insert_test;
CREATE DATABASE insert_test;
USE insert_test;
CREATE TABLE `column_type_test` (
`c_tinyint` tinyint(4) DEFAULT NULL COMMENT 'tinyint',
`c_smallint` smallint(6) DEFAULT NULL COMMENT 'smallint',
`c_mediumint` mediumint(9) DEFAULT NULL COMMENT 'mediumint',
`c_int` int(11) DEFAULT NULL COMMENT 'int',
`c_bigint` bigint(20) DEFAULT NULL COMMENT 'bigint',
`c_float` float DEFAULT NULL COMMENT 'float',
`c_double` double DEFAULT NULL COMMENT 'double',
`c_decimal` decimal(10,5) DEFAULT NULL COMMENT 'decimal',
`c_date` date DEFAULT NULL COMMENT 'date',
`c_datetime` datetime DEFAULT NULL COMMENT 'datetime',
`c_timestamp` timestamp NULL DEFAULT NULL COMMENT 'timestamp',
`c_time` time DEFAULT NULL COMMENT 'time',
`c_char` char(10) DEFAULT NULL COMMENT 'char',
`c_varchar` varchar(10) DEFAULT NULL COMMENT 'varchar',
`c_blob` blob COMMENT 'blob',
`c_text` text COMMENT 'text',
`c_longblob` longblob COMMENT 'longblob'
) ENGINE=TIANMU;
insert into column_type_test(c_tinyint,c_smallint,c_mediumint,c_int,c_bigint,c_float,c_double,c_decimal,c_date,c_datetime,c_timestamp,c_time,c_char,c_varchar,c_text)
values(100,100,100,100,100,5.2,10.88,100.083,'2016-02-25','2016-02-25 10:20:01','2016-02-25 05:20:01','10:20:01','stoneatom','hello','bcdefghijklmn');
insert into column_type_test(c_tinyint,c_smallint,c_mediumint,c_int,c_bigint,c_float,c_double,c_decimal,c_date,c_datetime,c_timestamp,c_time,c_char,c_varchar,c_text)
values(101,101,101,101,101,5.2,10.88,101.083,'2016-02-25','2016-02-25 10:20:01','2016-02-25 05:20:01','10:20:01','stoneatom','hello','bcdefghijklmn');
insert into column_type_test(c_tinyint,c_smallint,c_mediumint,c_int,c_bigint,c_float,c_double,c_decimal,c_date,c_datetime,c_timestamp,c_time,c_char,c_varchar,c_text)
values(102,102,102,102,102,5.2,10.88,102.083,'2016-02-25','2016-02-25 10:20:01','2016-02-25 05:20:01','10:20:01','stoneatom','hello','bcdefghijklmn');
insert into column_type_test(c_tinyint,c_smallint,c_mediumint,c_int,c_bigint,c_float,c_double,c_decimal,c_date,c_datetime,c_timestamp,c_time,c_char,c_varchar,c_text)
values(103,103,103,103,103,5.2,10.88,103.083,'2016-02-25','2016-02-25 10:20:01','2016-02-25 05:20:01','10:20:01','stoneatom','hello','bcdefghijklmn');
insert into column_type_test(c_tinyint,c_smallint,c_mediumint,c_int,c_bigint,c_float,c_double,c_decimal,c_date,c_datetime,c_timestamp,c_time,c_char,c_varchar,c_text)
values(104,104,104,104,104,5.2,10.88,104.083,'2016-02-25','2016-02-25 10:20:01','2016-02-25 05:20:01','10:20:01','stoneatom','hello','bcdefghijklmn');
select * from column_type_test;
c_tinyint	c_smallint	c_mediumint	c_int	c_bigint	c_float	c_double	c_decimal	c_date	c_datetime	c_timestamp	c_time	c_char	c_varchar	c_blob	c_text	c_longblob
100	100	100	100	100	5.2	10.88	100.08300	2016-02-25	2016-02-25 10:20:01	2016-02-25 05:20:01	10:20:01	stoneatom	hello	NULL	bcdefghijklmn	NULL
101	101	101	101	101	5.2	10.88	101.08300	2016-02-25	2016-02-25 10:20:01	2016-02-25 05:20:01	10:20:01	stoneatom	hello	NULL	bcdefghijklmn	NULL
102	102	102	102	102	5.2	10.88	102.08300	2016-02-25	2016-02-25 10:20:01	2016-02-25 05:20:01	10:20:01	stoneatom	hello	NULL	bcdefghijklmn	NULL
103	103	103	103	103	5.2	10.88	103.08300	2016-02-25	2016-02-25 10:20:01	2016-02-25 05:20:01	10:20:01	stoneatom	hello	NULL	bcdefghijklmn	NULL
104	104	104	104	104	5.2	10.88	104.08300	2016-02-25	2016-02-25 10:20:01	2016-02-25 05:20:01	10:20:01	stoneatom	hello	NULL	bcdefghijklmn	NULL
drop table column_type_test;
#
# Test of refering to old values
#
drop table if exists t1,t2,t3;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
Warnings:
Warning	3090	Changing sql mode 'NO_AUTO_CREATE_USER' is deprecated. It will be removed in a future release.
create table t1 (a int not null);
insert into t1 values (1);
insert into t1 values (a+2);
insert into t1 values (a+3),(a+4);
insert into t1 values (5),(a+6);
select * from t1;
a
1
2
3
4
5
6
drop table t1;
#
# Test of duplicate key values with packed keys
#
create table t1 (id int not null auto_increment primary key, username varchar(32) not null);
insert into t1 values (0,"mysql");
insert into t1 values (0,"mysql ab");
insert into t1 values (0,"mysql a");
insert into t1 values (0,"r1manic");
insert into t1 values (0,"r1man");
drop table t1;
#
# Test insert syntax
#
create table t1 (a int not null auto_increment,
primary key (a),
t timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
c char(10) default "hello", i int)engine=tianmu;
insert into t1 values (default,default,default,default), (default,default,default,default), (4,0,"a",5),(default,default,default,default);
select a,t>0,c,i from t1;
a	t>0	c	i
1	1	hello	NULL
2	1	hello	NULL
4	0	a	5
5	1	hello	NULL
truncate table t1;
insert into t1 set a=default,t=default,c=default;
insert into t1 set a=default,t=default,c=default,i=default;
insert into t1 set a=4,t=0,c="a",i=5;
insert into t1 set a=5,t=0,c="a",i=null;
insert into t1 set a=default,t=default,c=default,i=default;
select a,t>0,c,i from t1;
a	t>0	c	i
1	1	hello	NULL
2	1	hello	NULL
4	0	a	5
5	0	a	NULL
6	1	hello	NULL
drop table t1;
#
#Test of behaviour with INSERT VALUES (NULL)
#
create table t1 (id int NOT NULL DEFAULT 8);
insert into t1 values(NULL);
ERROR 23000: Column 'id' cannot be null
insert into t1 values (1), (NULL), (2);
Warnings:
Warning	1048	Column 'id' cannot be null
select * from t1;
id
1
0
2
drop table t1;
#
# Test of mysqld crash with fully qualified column names
#
drop database if exists mysqltest;
create database mysqltest_insert_test;
use mysqltest_insert_test;
create table t1 (c int);
insert into mysqltest_insert_test.t1 set mysqltest_insert_test.t1.c = '1';
drop database mysqltest_insert_test;
use insert_test;
#
# Test of wrong values for float data 
#
create table t1(
number int auto_increment primary key,
original_value varchar(50),
f_double double,
f_float float,
f_double_7_2 double(7,2),
f_float_4_3 float (4,3),
f_double_u double,
f_float_u float,
f_double_15_1_u double(15,1),
f_float_3_1_u float (3,1));
set @value= "aa";
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
Warnings:
Warning	1265	Data truncated for column 'f_double' at row 1
Warning	1265	Data truncated for column 'f_float' at row 1
Warning	1265	Data truncated for column 'f_double_7_2' at row 1
Warning	1265	Data truncated for column 'f_float_4_3' at row 1
Warning	1265	Data truncated for column 'f_double_u' at row 1
Warning	1265	Data truncated for column 'f_float_u' at row 1
Warning	1265	Data truncated for column 'f_double_15_1_u' at row 1
Warning	1265	Data truncated for column 'f_float_3_1_u' at row 1
select * from t1 where number =last_insert_id();
set @value= "1aa";
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
Warnings:
Warning	1265	Data truncated for column 'f_double' at row 1
Warning	1265	Data truncated for column 'f_float' at row 1
Warning	1265	Data truncated for column 'f_double_7_2' at row 1
Warning	1265	Data truncated for column 'f_float_4_3' at row 1
Warning	1265	Data truncated for column 'f_double_u' at row 1
Warning	1265	Data truncated for column 'f_float_u' at row 1
Warning	1265	Data truncated for column 'f_double_15_1_u' at row 1
Warning	1265	Data truncated for column 'f_float_3_1_u' at row 1
select * from t1 where number =last_insert_id();
set @value= "aa1";
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
Warnings:
Warning	1265	Data truncated for column 'f_double' at row 1
Warning	1265	Data truncated for column 'f_float' at row 1
Warning	1265	Data truncated for column 'f_double_7_2' at row 1
Warning	1265	Data truncated for column 'f_float_4_3' at row 1
Warning	1265	Data truncated for column 'f_double_u' at row 1
Warning	1265	Data truncated for column 'f_float_u' at row 1
Warning	1265	Data truncated for column 'f_double_15_1_u' at row 1
Warning	1265	Data truncated for column 'f_float_3_1_u' at row 1
select * from t1 where number =last_insert_id();
set @value= "1e+1111111111a";
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
Warnings:
Warning	1264	Out of range value for column 'f_double' at row 1
Warning	1264	Out of range value for column 'f_float' at row 1
Warning	1264	Out of range value for column 'f_float' at row 1
Warning	1264	Out of range value for column 'f_double_7_2' at row 1
Warning	1264	Out of range value for column 'f_double_7_2' at row 1
Warning	1264	Out of range value for column 'f_float_4_3' at row 1
Warning	1264	Out of range value for column 'f_float_4_3' at row 1
Warning	1264	Out of range value for column 'f_double_u' at row 1
Warning	1264	Out of range value for column 'f_float_u' at row 1
Warning	1264	Out of range value for column 'f_float_u' at row 1
Warning	1264	Out of range value for column 'f_double_15_1_u' at row 1
Warning	1264	Out of range value for column 'f_double_15_1_u' at row 1
Warning	1264	Out of range value for column 'f_float_3_1_u' at row 1
Warning	1264	Out of range value for column 'f_float_3_1_u' at row 1
select * from t1 where number =last_insert_id();
set @value= "-1e+1111111111a";
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
Warnings:
Warning	1264	Out of range value for column 'f_double' at row 1
Warning	1264	Out of range value for column 'f_float' at row 1
Warning	1264	Out of range value for column 'f_float' at row 1
Warning	1264	Out of range value for column 'f_double_7_2' at row 1
Warning	1264	Out of range value for column 'f_double_7_2' at row 1
Warning	1264	Out of range value for column 'f_float_4_3' at row 1
Warning	1264	Out of range value for column 'f_float_4_3' at row 1
Warning	1264	Out of range value for column 'f_double_u' at row 1
Warning	1264	Out of range value for column 'f_float_u' at row 1
Warning	1264	Out of range value for column 'f_float_u' at row 1
Warning	1264	Out of range value for column 'f_double_15_1_u' at row 1
Warning	1264	Out of range value for column 'f_double_15_1_u' at row 1
Warning	1264	Out of range value for column 'f_float_3_1_u' at row 1
Warning	1264	Out of range value for column 'f_float_3_1_u' at row 1
select * from t1 where number =last_insert_id();
set @value= 1e+1111111111;
ERROR 22007: Illegal double '1e+1111111111' value found during parsing
set @value= -1e+1111111111;
ERROR 22007: Illegal double '1e+1111111111' value found during parsing
set @value= 1e+111;
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
Warnings:
Warning	1264	Out of range value for column 'f_float' at row 1
Warning	1264	Out of range value for column 'f_double_7_2' at row 1
Warning	1264	Out of range value for column 'f_float_4_3' at row 1
Warning	1264	Out of range value for column 'f_float_u' at row 1
Warning	1264	Out of range value for column 'f_double_15_1_u' at row 1
Warning	1264	Out of range value for column 'f_float_3_1_u' at row 1
select * from t1 where number =last_insert_id();
set @value= -1e+111;
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
Warnings:
Warning	1264	Out of range value for column 'f_float' at row 1
Warning	1264	Out of range value for column 'f_double_7_2' at row 1
Warning	1264	Out of range value for column 'f_float_4_3' at row 1
Warning	1264	Out of range value for column 'f_float_u' at row 1
Warning	1264	Out of range value for column 'f_double_15_1_u' at row 1
Warning	1264	Out of range value for column 'f_float_3_1_u' at row 1
select * from t1 where number =last_insert_id();
set @value= 1;
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
select * from t1 where number =last_insert_id();
set @value= -1;
insert into t1 values(null,@value,@value,@value,@value,@value,@value,@value,@value,@value);
select * from t1 where number =last_insert_id();
drop table t1;
#
# Test automatic result buffering with INSERT INTO t1 ... SELECT ... FROM t1
#
create table t1(id1 int not null auto_increment primary key, t char(12));
create table t2(id2 int not null, t char(12));
create table t3(id3 int not null, t char(12));
select count(*) from t2;
count(*)
500
insert into  t2 select t1.* from t1, t2 t, t3 where  t1.id1 = t.id2 and t.id2 = t3.id3;
select count(*) from t2;
count(*)
25500
drop table t1,t2,t3;
#
# Test different cases of duplicate fields
#
create table t1 (a int, b int);
insert into t1 (a,b) values (a,b);
insert into t1 SET a=1, b=a+1;
insert into t1 (a,b) select 1,2;
INSERT INTO t1 ( a ) SELECT 0 ON DUPLICATE KEY UPDATE a = a + VALUES (a);
prepare stmt1 from ' replace into t1 (a,a) select 100, ''hundred'' ';
ERROR 42000: Column 'a' specified twice
insert into t1 (a,b,b) values (1,1,1);
ERROR 42000: Column 'b' specified twice
insert into t1 (a,a) values (1,1,1);
ERROR 21S01: Column count doesn't match value count at row 1
insert into t1 (a,a) values (1,1);
ERROR 42000: Column 'a' specified twice
insert into t1 SET a=1,b=2,a=1;
ERROR 42000: Column 'a' specified twice
insert into t1 (b,b) select 1,2;
ERROR 42000: Column 'b' specified twice
INSERT INTO t1 (b,b) SELECT 0,0 ON DUPLICATE KEY UPDATE a = a + VALUES (a);
ERROR 42000: Column 'b' specified twice
drop table t1;
#
# Test for values returned by ROW_COUNT() function
# (and thus for values returned by mysql_affected_rows())
# for various forms of INSERT
#
create table t1 (id int primary key, data int);
insert into t1 values (1, 1), (2, 2), (3, 3);
select row_count();
row_count()
3
insert ignore into t1 values (1, 1);
Warnings:
Warning	1062	Duplicate entry '1' for key 'PRIMARY'
select row_count();
row_count()
-1
insert into t1 values (2, 2) on duplicate key update data= data + 10;
select row_count();
row_count()
2
insert into t1 values (5, 5) on duplicate key update data= data + 10;
select row_count();
row_count()
1
drop table t1;
#
# ON DUPLICATE KEY clause allows fields not from the insert table
#
create table t1 (f1 int primary key, f2 int);
create table t2 (f3 int, f4 int);
create view v1 as select * from t1, t2 where f1= f3;
insert into t1 values (1,11), (2,22);
insert into t2 values (1,12), (2,24);
insert into v1 (f1) values (3) on duplicate key update f3= f3 + 10;
ERROR HY000: Can not modify more than one base table through a join view 'insert_test.v1'
insert into v1 (f1) values (3) on duplicate key update f1= f3 + 10;
ERROR HY000: Can not modify more than one base table through a join view 'insert_test.v1'
select * from t1;
f1	f2
1	11
2	22
insert into v1 (f1) values (3) on duplicate key update f1= f3 + 10;
ERROR HY000: Can not modify more than one base table through a join view 'insert_test.v1'
select * from t1;
f1	f2
1	11
2	22
drop view v1;
drop table t1,t2;
#
# mysqld (debug) aborts when inserting specific numbers into char fields
#
CREATE TABLE t1 (
a char(20) NOT NULL,
b char(7) DEFAULT NULL,
c char(4) DEFAULT NULL
);
INSERT INTO t1(a,b,c) VALUES (9.999999e+0, 9.999999e+0, 9.999e+0);
INSERT INTO t1(a,b) VALUES (1.225e-04, 1.225e-04);
INSERT INTO t1(a,b) VALUES (1.225e-01, 1.225e-01);
INSERT INTO t1(a,b) VALUES (1.225877e-01, 1.225877e-01);
INSERT INTO t1(a,b) VALUES (1.225e+01, 1.225e+01);
INSERT INTO t1(a,b,c) VALUES (1.225e+01, 1.225e+01, 1.225e+01);
INSERT INTO t1(a,b) VALUES (1.225e+05, 1.225e+05);
INSERT INTO t1(a,b) VALUES (1.225e+10, 1.225e+10);
INSERT INTO t1(a,b) VALUES (1.225e+15, 1.225e+15);
INSERT INTO t1(a,b) VALUES (5000000e+0, 5000000e+0);
INSERT INTO t1(a,b) VALUES (1.25e+78, 1.25e+78);
INSERT INTO t1(a,b) VALUES (1.25e-94, 1.25e-94);
INSERT INTO t1(a,b) VALUES (1.25e+203, 1.25e+203);
INSERT INTO t1(a,b) VALUES (1.25e-175, 1.25e-175);
INSERT INTO t1(a,c) VALUES (1.225e+0, 1.225e+0);
INSERT INTO t1(a,c) VALUES (1.37e+0, 1.37e+0);
INSERT INTO t1(a,c) VALUES (-1.37e+0, -1.37e+0);
INSERT INTO t1(a,c) VALUES (1.87e-3, 1.87e-3);
Warnings:
Warning	1265	Data truncated for column 'c' at row 1
INSERT INTO t1(a,c) VALUES (-1.87e-2, -1.87e-2);
INSERT INTO t1(a,c) VALUES (5000e+0, 5000e+0);
INSERT INTO t1(a,c) VALUES (-5000e+0, -5000e+0);
SELECT * FROM t1;
a	b	c
9.999999	10	10
0.0001225	1.22e-4	NULL
0.1225	0.1225	NULL
0.1225877	0.12259	NULL
12.25	12.25	NULL
12.25	12.25	12.2
122500	122500	NULL
12250000000	1.22e10	NULL
1.225e15	1.22e15	NULL
5000000	5000000	NULL
1.25e78	1.25e78	NULL
1.25e-94	1.2e-94	NULL
1.25e203	1.2e203	NULL
1.25e-175	1e-175	NULL
1.225	NULL	1.23
1.37	NULL	1.37
-1.37	NULL	-1.4
0.00187	NULL	2e-3
-0.0187	NULL	0
5000	NULL	5000
-5000	NULL	-5e3
DROP TABLE t1;
CREATE TABLE t1 (
a char(20) NOT NULL,
b char(7) DEFAULT NULL,
c char(5)
);
INSERT INTO t1(a,b,c) VALUES (9.999999e+0, 9.999999e+0, 9.999e+0);
INSERT INTO t1(a,b,c) VALUES (1.225e-05, 1.225e-05, 1.225e-05);
INSERT INTO t1(a,b) VALUES (1.225e-04, 1.225e-04);
INSERT INTO t1(a,b) VALUES (1.225e-01, 1.225e-01);
INSERT INTO t1(a,b) VALUES (1.225877e-01, 1.225877e-01);
INSERT INTO t1(a,b) VALUES (1.225e+01, 1.225e+01);
INSERT INTO t1(a,b,c) VALUES (1.225e+01, 1.225e+01, 1.225e+01);
INSERT INTO t1(a,b) VALUES (1.225e+05, 1.225e+05);
INSERT INTO t1(a,b) VALUES (1.225e+10, 1.225e+10);
INSERT INTO t1(a,b) VALUES (1.225e+15, 1.225e+15);
INSERT INTO t1(a,b) VALUES (5000000e+0, 5000000e+0);
INSERT INTO t1(a,b) VALUES (1.25e+78, 1.25e+78);
INSERT INTO t1(a,b) VALUES (1.25e-94, 1.25e-94);
INSERT INTO t1(a,b) VALUES (1.25e+203, 1.25e+203);
INSERT INTO t1(a,b) VALUES (1.25e-175, 1.25e-175);
INSERT INTO t1(a,c) VALUES (1.225e+0, 1.225e+0);
INSERT INTO t1(a,c) VALUES (1.37e+0, 1.37e+0);
INSERT INTO t1(a,c) VALUES (-1.37e+0, -1.37e+0);
INSERT INTO t1(a,c) VALUES (1.87e-3, 1.87e-3);
INSERT INTO t1(a,c) VALUES (-1.87e-2, -1.87e-2);
INSERT INTO t1(a,c) VALUES (5000e+0, 5000e+0);
INSERT INTO t1(a,c) VALUES (-5000e+0, -5000e+0);
SELECT * FROM t1;
a	b	c
9.999999	10	9.999
0.00001225	1.22e-5	1e-5
0.0001225	1.22e-4	NULL
0.1225	0.1225	NULL
0.1225877	0.12259	NULL
12.25	12.25	NULL
12.25	12.25	12.25
122500	122500	NULL
12250000000	1.22e10	NULL
1.225e15	1.22e15	NULL
5000000	5000000	NULL
1.25e78	1.25e78	NULL
1.25e-94	1.2e-94	NULL
1.25e203	1.2e203	NULL
1.25e-175	1e-175	NULL
1.225	NULL	1.225
1.37	NULL	1.37
-1.37	NULL	-1.37
0.00187	NULL	0.002
-0.0187	NULL	-0.02
5000	NULL	5000
-5000	NULL	-5000
DROP TABLE t1;
SET sql_mode = default;
#
# assertion in Field_str::store(double)
#
CREATE TABLE t (a CHAR(10),b INT);
INSERT INTO t VALUES (),(),();
INSERT INTO t(a) SELECT rand() FROM t;
DROP TABLE t;
#
# String not cast to int correctly
#
CREATE TABLE t2 (c1 BIGINT);
INSERT INTO t2 VALUES('15449237462.0000000000');
SELECT * FROM t2;
c1
15449237462
drop table t2;
#
#Simple INSERT crashes the server
#
CREATE TABLE t1(f1 FLOAT);
INSERT INTO t1 VALUES (1.23);
CREATE TABLE t2(f1 CHAR(1));
INSERT INTO t2 SELECT f1 FROM t1;
DROP TABLE t1, t2;
#
# Bug#34898 "mysql_info() reports 0 warnings while
# mysql_warning_count() reports 1"
# Check that the number of warnings reported by
# mysql_info() is correct.
#
drop table if exists t1;
create table t1 (data varchar(4) not null);
#
# Demonstrate that the number of warnings matches
# the information in mysql_info().
#
insert ignore t1 (data) values ('letter'), (1/0);
affected rows: 2
info: Records: 2  Duplicates: 0  Warnings: 3
Warnings:
Warning	1265	Data truncated for column 'data' at row 1
Warning	1365	Division by 0
Warning	1048	Column 'data' cannot be null
update ignore t1 set data='envelope' where 1/0 or 1;
affected rows: 2
info: Rows matched: 2  Changed: 2  Warnings: 3
Warnings:
Warning	1365	Division by 0
Warning	1265	Data truncated for column 'data' at row 1
Warning	1265	Data truncated for column 'data' at row 2
insert ignore t1 (data) values (default), (1/0), ('dead beef');
affected rows: 3
info: Records: 3  Duplicates: 0  Warnings: 4
Warnings:
Warning	1364	Field 'data' doesn't have a default value
Warning	1365	Division by 0
Warning	1048	Column 'data' cannot be null
Warning	1265	Data truncated for column 'data' at row 3
drop table t1;
#
# Bug#54106 assert in Protocol::end_statement,
#           INSERT IGNORE ... SELECT ... UNION SELECT ...
#
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (a INT);
INSERT INTO t1 (a, a) VALUES (1, 1);
ERROR 42000: Column 'a' specified twice
INSERT IGNORE t1 (a, a) VALUES (1, 1);
ERROR 42000: Column 'a' specified twice
INSERT IGNORE t1 (a, a) SELECT 1,1;
ERROR 42000: Column 'a' specified twice
INSERT IGNORE t1 (a, a) SELECT 1,1 UNION SELECT 2,2;
ERROR 42000: Column 'a' specified twice
DROP TABLE t1;
#
# ASSERTION `TRANSL->ITEM->FIXED' FAILED
# IN SELECT_LEX::DELETE_UNUSED_MERGED_COLUMN
#
CREATE TABLE t1 ( pk INT, PRIMARY KEY (pk))engine=tianmu;
CREATE TABLE t2 LIKE t1;
INSERT INTO t1 VALUES (2);
INSERT INTO t2 VALUES (2);
CREATE VIEW v1 AS SELECT * FROM t2 AS a
WHERE a.pk IN ( SELECT pk FROM t1 AS b WHERE b.pk = a.pk );
CREATE VIEW v2 AS SELECT * FROM t1 AS a
WHERE a.pk IN ( SELECT pk FROM v1 AS b WHERE b.pk = a.pk );
PREPARE st1 FROM 'INSERT INTO v2 (pk) VALUES ( 1 )';
EXECUTE st1;
SELECT * FROM t1;
pk
2
1
SELECT * FROM t2;
pk
2
DROP TABLE t1, t2;
DROP VIEW v1, v2;
#
# ASSERTION !(WANT_PRIVILEGE & ~(GRANT->WANT_PRIVILEGE | GRANT->PRIVILEGE))'
#
CREATE TABLE t1 (pk INT, PRIMARY KEY (pk));
INSERT INTO t1 VALUES (1);
CREATE ALGORITHM = TEMPTABLE VIEW v2 AS
SELECT * FROM t1 AS a NATURAL JOIN t1 b WHERE pk BETWEEN 1 AND 2;
CREATE ALGORITHM = UNDEFINED VIEW v1 AS
SELECT * FROM t1 AS a
WHERE a.pk IN ( SELECT pk FROM v2 AS b WHERE b.pk = a.pk );
PREPARE st1 FROM "INSERT INTO v1 (pk) VALUES (2)";
EXECUTE st1;
SELECT * FROM t1;
pk
1
2
DROP VIEW v1, v2;
DROP TABLE t1;
DROP DATABASE insert_test;
